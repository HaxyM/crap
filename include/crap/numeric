#ifndef CRAP_NUMERIC
#define CRAP_NUMERIC

#include "numeric.d/abstype.h"
#include "numeric.d/absvalue.h"
#include "numeric.d/accumulatefortype.h"
#include "numeric.d/accumulatetype.h"
#include "numeric.d/accumulatetypesource.h"
#include "numeric.d/accumulatevalue.h"
#include "numeric.d/accumulatevaluesource.h"
#include "numeric.d/addsatfortype.h"
#include "numeric.d/addsattype.h"
#include "numeric.d/addsatvalue.h"
#include "numeric.d/adjacentdifferencefortype.h"
#include "numeric.d/adjacentdifferencetype.h"
#include "numeric.d/adjacentdifferencevalue.h"
#include "numeric.d/contracttype.h"
#include "numeric.d/divsatfortype.h"
#include "numeric.d/divsattype.h"
#include "numeric.d/divsatvalue.h"
#include "numeric.d/exclusivescanfortype.h"
#include "numeric.d/exclusivescantype.h"
#include "numeric.d/exclusivescanvalue.h"
#include "numeric.d/gcdfortype.h"
#include "numeric.d/gcdtype.h"
#include "numeric.d/gcdvalue.h"
#include "numeric.d/inclusivescanfortype.h"
#include "numeric.d/inclusivescantype.h"
#include "numeric.d/inclusivescanvalue.h"
#include "numeric.d/innerproductfortype.h"
#include "numeric.d/innerproducttype.h"
#include "numeric.d/innerproductvalue.h"
#include "numeric.d/iotavalue.h"
#include "numeric.d/lcmfortype.h"
#include "numeric.d/lcmtype.h"
#include "numeric.d/lcmvalue.h"
#include "numeric.d/mulsatfortype.h"
#include "numeric.d/mulsattype.h"
#include "numeric.d/mulsatvalue.h"
#include "numeric.d/outerproductfortype.h"
#include "numeric.d/outerproducttype.h"
#include "numeric.d/outerproductvalue.h"
#include "numeric.d/outerproductvaluezipper.h"
#include "numeric.d/partialsumfortype.h"
#include "numeric.d/partialsumtype.h"
#include "numeric.d/partialsumvalue.h"
#include "numeric.d/reducefortype.h"
#include "numeric.d/reducetype.h"
#include "numeric.d/reducetypesource.h"
#include "numeric.d/reducevalue.h"
#include "numeric.d/reducevaluesource.h"
#include "numeric.d/saturatecastvalue.h"
#include "numeric.d/subsatfortype.h"
#include "numeric.d/subsattype.h"
#include "numeric.d/subsatvalue.h"

#endif

